[{"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/reportWebVitals.js":"1","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ApiClient.js":"2","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditActivity.js":"3","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateActivity.js":"4","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ScheduleGrid.js":"5","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DictionaryList.js":"6","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Utils.js":"7","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/index.js":"8","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/App.js":"9","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateDictionaryElement.js":"10","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DeleteDictionaryElement.js":"11","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditDictionaryElement.js":"12","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Error.js":"13"},{"size":362,"mtime":1611546358629,"results":"14","hashOfConfig":"15"},{"size":4097,"mtime":1611799592214,"results":"16","hashOfConfig":"15"},{"size":6501,"mtime":1611799021980,"results":"17","hashOfConfig":"15"},{"size":4034,"mtime":1611799025936,"results":"18","hashOfConfig":"15"},{"size":3928,"mtime":1611601658822,"results":"19","hashOfConfig":"15"},{"size":2467,"mtime":1611546358625,"results":"20","hashOfConfig":"15"},{"size":515,"mtime":1611546358625,"results":"21","hashOfConfig":"15"},{"size":500,"mtime":1611546358629,"results":"22","hashOfConfig":"15"},{"size":3087,"mtime":1611799866151,"results":"23","hashOfConfig":"15"},{"size":1580,"mtime":1611799010016,"results":"24","hashOfConfig":"15"},{"size":2019,"mtime":1611799032112,"results":"25","hashOfConfig":"15"},{"size":2731,"mtime":1611799003476,"results":"26","hashOfConfig":"15"},{"size":281,"mtime":1611798940865,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"8e1iml",{"filePath":"31","messages":"32","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/reportWebVitals.js",[],["59","60"],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ApiClient.js",["61"],"import axios from 'axios';\n\nconst ApiClient = {\n    apiUrl: (path) => ('/api' + path),\n    getDictionaries: async function (slot, id = null) {\n        let query = slot.toString();\n        if (id !== null)\n            query += '?id=' + id.toString();\n        const g = await this.getDictionaryBySlot('classGroups/slot/' + query)\n        const r = await this.getDictionaryBySlot('rooms/slot/' + query);\n        const t = await this.getDictionaryBySlot('teachers/slot/' + query);\n        const s = await this.getDictionaryBySlot('subjects/slot/' + query);\n        return {\n            teachers: t,\n            groups: g,\n            rooms: r,\n            subjects: s\n        };\n    },\n    getDictionariesFirstElements() {\n        const g = await this.getDictionary('classGroups')\n        const r = await this.getDictionary('rooms');\n        const t = await this.getDictionary('teachers');\n        const s = await this.getDictionary('subjects');\n        return {\n            teacher: t[0].name,\n            subject: s[0].name,\n            room: r[0].name,\n            group: g[0].name\n        }\n    },\n    getDictionary: async function (type) {\n        const result = await axios.get(this.apiUrl('/' + type));\n        return result.data;\n    },\n    getDictionaryBySlot: async function (query) {\n        const result = await axios.get(this.apiUrl('/' + query));\n        return result.data;\n    },\n    getDictionaryElement: async function (type, id) {\n        const result = await axios.get(this.apiUrl('/' + type + '/' + id));\n        return result.data;\n    },\n    createDictionaryElement: async function (type, element) {\n        try {\n            const result = await axios.post(this.apiUrl('/' + type), element);\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n    },\n    editDictionaryElement: async function (type, element) {\n        try {\n            const result = await axios.put(this.apiUrl('/' + type + '/' + element.Id), element);\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n\n    },\n    deleteDictionaryElement: async function (type, element) {\n        try {\n            const result = await axios.delete(this.apiUrl('/' + type + '/' + element.Id + '/' + element.Timestamp));\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n    },\n    getSchedule: async function (type, name) {\n        const result = await axios.get(this.apiUrl('/Schedule/' + type + '/' + name));\n        return result.data;\n    },\n    getActivity: async function (id) {\n        const result = await axios.get(this.apiUrl('/Activities/' + id.toString()));\n        return result.data\n    },\n    createActivity: async function (activity) {\n        try {\n            const result = await axios.post(this.apiUrl('/Activities'), activity);\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n    },\n    updateActivity: async function (activity) {\n        try {\n            const result = await axios.put(this.apiUrl('/Activities/' + activity.Id), activity);\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n    },\n    deleteActivity: async function (activity) {\n        try {\n            const result = await axios.delete(this.apiUrl('/Activities/' + activity.Id + '/' + activity.Timestamp));\n            return { data: result.data, status: result.status };\n        }\n        catch (error) {\n            return { data: error.response.data, status: error.response.status };\n        }\n    }\n};\n\nexport default ApiClient;","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditActivity.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateActivity.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ScheduleGrid.js",[],["62","63"],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DictionaryList.js",[],["64","65"],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Utils.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/index.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/App.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateDictionaryElement.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DeleteDictionaryElement.js",[],["66","67"],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditDictionaryElement.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Error.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":null,"fatal":true,"severity":2,"message":"72","line":21,"column":19},{"ruleId":"68","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"70","replacedBy":"76"},{"ruleId":"68","replacedBy":"77"},{"ruleId":"70","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"Parsing error: 'await' is only allowed within async functions\n\n  19 |     },\n  20 |     getDictionariesFirstElements() {\n> 21 |         const g = await this.getDictionary('classGroups')\n     |                   ^\n  22 |         const r = await this.getDictionary('rooms');\n  23 |         const t = await this.getDictionary('teachers');\n  24 |         const s = await this.getDictionary('subjects');",["79"],["80"],["79"],["80"],["79"],["80"],"no-global-assign","no-unsafe-negation"]