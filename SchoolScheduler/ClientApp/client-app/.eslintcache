[{"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/reportWebVitals.js":"1","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ApiClient.js":"2","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditActivity.js":"3","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateActivity.js":"4","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ScheduleGrid.js":"5","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DictionaryList.js":"6","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Utils.js":"7","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/index.js":"8","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/App.js":"9"},{"size":362,"mtime":1611447720071,"results":"10","hashOfConfig":"11"},{"size":2176,"mtime":1611535154867,"results":"12","hashOfConfig":"11"},{"size":6259,"mtime":1611535144759,"results":"13","hashOfConfig":"11"},{"size":3860,"mtime":1611534161596,"results":"14","hashOfConfig":"11"},{"size":3918,"mtime":1611534489477,"results":"15","hashOfConfig":"11"},{"size":2301,"mtime":1611517558161,"results":"16","hashOfConfig":"11"},{"size":515,"mtime":1611447720071,"results":"17","hashOfConfig":"11"},{"size":500,"mtime":1611447720071,"results":"18","hashOfConfig":"11"},{"size":1880,"mtime":1611534777686,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8e1iml",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/reportWebVitals.js",[],["40","41"],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ApiClient.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/EditActivity.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/CreateActivity.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/ScheduleGrid.js",["42"],"import Button from 'react-bootstrap/Button'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Link, useParams, useHistory\n} from \"react-router-dom\";\nimport Utils from './Utils.js';\nimport ApiClient from './ApiClient.js';\n\n\nfunction Days() {\n    return (\n        <tr>\n            <td>\n                <Button key=\"time\" className=\"btn btn-light btn-block\">time</Button>\n            </td>\n            {Utils.terms.days.map(dayId => (\n                <td>\n                    <Button key={dayId} className=\"btn btn-light btn-block\">{dayId}</Button>\n                </td>\n            ))}\n        </tr>\n    );\n}\n\nfunction ScheduleButtons(props) {\n    const [scheduleData, setScheduleData] = useState({ slots: [], name: '', type: '' });\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await ApiClient.getSchedule(props.type, props.name);\n            setScheduleData(result);\n        };\n        fetchData();\n    }, [props.name, props.type]);\n    return (\n        <>\n            {Utils.range(0, 8).map(i => (\n                <tr>\n                    <td>\n                        <Button key={'term' + i.toString()} className=\"btn btn-light btn-block\">{Utils.terms.hours[i]}</Button>\n                    </td>\n                    {scheduleData.slots.slice(i * 5, i * 5 + 5).map((slot, index) => {\n                        if (slot.id === null) {\n                            return (\n                                <td>\n                                    <Link to={\"/create/\" + scheduleData.type + \"/\" + scheduleData.name + \"/\" + (i * 5 + index).toString()}>\n                                        <Button key={i * 5 + index} className=\"btn btn-secondary btn-block\"> {slot.title} </Button>\n                                    </Link>\n                                </td>\n                            )\n                        }\n                        else {\n                            return (\n                                <td>\n                                    <Link to={\"/edit/\" + scheduleData.type + \"/\" + scheduleData.name + \"/\" + slot.id + \"/\" + (i * 5 + index).toString()}>\n                                        <Button key={i * 5 + index} className=\"btn btn-secondary btn-block\"> {slot.title} </Button>\n                                    </Link>\n                                </td>\n                            )\n\n                        }\n                    })}\n                </tr>\n            ))}\n        </>\n    );\n}\n\n\nfunction ScheduleGrid(props) {\n    let { searchName } = useParams();\n    const [value, setValue] = useState(searchName);\n    const history = useHistory();\n    const handleSelect = (e) => {\n        setValue(e);\n        history.push(\"/\" + props.type + \"/\" + e);\n    }\n    const [dictionaryList, setDictionaryList] = useState({ nameList: [] });\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await ApiClient.getDictionary(props.type);\n            setDictionaryList({ nameList: result });\n        };\n        fetchData();\n    }, []);\n    return (\n        <div>\n\n            <DropdownButton\n                alignRight\n                title={value}\n                id=\"dropdown-menu-align-right\"\n                onSelect={handleSelect}>\n                {dictionaryList.nameList.map(item => (\n                    <Dropdown.Item eventKey={item.name}>{item.name}</Dropdown.Item>\n                ))}\n            </DropdownButton>\n\n            <br></br>\n            <table className=\"table\">\n                <tbody>\n\n                    <Days></Days>\n                    <ScheduleButtons type={props.type} name={searchName}></ScheduleButtons>\n                </tbody>\n            </table>\n        </div>\n\n    );\n}\nexport default ScheduleGrid;\n","/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/DictionaryList.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/components/Utils.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/index.js",[],"/home/mateusz/Documents/Projects/C#/school-scheduler/SchoolScheduler/ClientApp/client-app/src/App.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":87,"column":8,"nodeType":"49","endLine":87,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.type'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [props.type]",{"range":"56","text":"57"},[3211,3213],"[props.type]"]